/*
Channel Manager Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channelmanager

import (
	"encoding/json"
)

// checks if the ChannelmanagerCreateAssociationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelmanagerCreateAssociationRequest{}

// ChannelmanagerCreateAssociationRequest struct for ChannelmanagerCreateAssociationRequest
type ChannelmanagerCreateAssociationRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	ChannelGrn *string `json:"channelGrn,omitempty"`
	MarketGrn *string `json:"marketGrn,omitempty"`
}

// NewChannelmanagerCreateAssociationRequest instantiates a new ChannelmanagerCreateAssociationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelmanagerCreateAssociationRequest() *ChannelmanagerCreateAssociationRequest {
	this := ChannelmanagerCreateAssociationRequest{}
	return &this
}

// NewChannelmanagerCreateAssociationRequestWithDefaults instantiates a new ChannelmanagerCreateAssociationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelmanagerCreateAssociationRequestWithDefaults() *ChannelmanagerCreateAssociationRequest {
	this := ChannelmanagerCreateAssociationRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ChannelmanagerCreateAssociationRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerCreateAssociationRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ChannelmanagerCreateAssociationRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ChannelmanagerCreateAssociationRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetChannelGrn returns the ChannelGrn field value if set, zero value otherwise.
func (o *ChannelmanagerCreateAssociationRequest) GetChannelGrn() string {
	if o == nil || IsNil(o.ChannelGrn) {
		var ret string
		return ret
	}
	return *o.ChannelGrn
}

// GetChannelGrnOk returns a tuple with the ChannelGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerCreateAssociationRequest) GetChannelGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelGrn) {
		return nil, false
	}
	return o.ChannelGrn, true
}

// HasChannelGrn returns a boolean if a field has been set.
func (o *ChannelmanagerCreateAssociationRequest) HasChannelGrn() bool {
	if o != nil && !IsNil(o.ChannelGrn) {
		return true
	}

	return false
}

// SetChannelGrn gets a reference to the given string and assigns it to the ChannelGrn field.
func (o *ChannelmanagerCreateAssociationRequest) SetChannelGrn(v string) {
	o.ChannelGrn = &v
}

// GetMarketGrn returns the MarketGrn field value if set, zero value otherwise.
func (o *ChannelmanagerCreateAssociationRequest) GetMarketGrn() string {
	if o == nil || IsNil(o.MarketGrn) {
		var ret string
		return ret
	}
	return *o.MarketGrn
}

// GetMarketGrnOk returns a tuple with the MarketGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerCreateAssociationRequest) GetMarketGrnOk() (*string, bool) {
	if o == nil || IsNil(o.MarketGrn) {
		return nil, false
	}
	return o.MarketGrn, true
}

// HasMarketGrn returns a boolean if a field has been set.
func (o *ChannelmanagerCreateAssociationRequest) HasMarketGrn() bool {
	if o != nil && !IsNil(o.MarketGrn) {
		return true
	}

	return false
}

// SetMarketGrn gets a reference to the given string and assigns it to the MarketGrn field.
func (o *ChannelmanagerCreateAssociationRequest) SetMarketGrn(v string) {
	o.MarketGrn = &v
}

func (o ChannelmanagerCreateAssociationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelmanagerCreateAssociationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.ChannelGrn) {
		toSerialize["channelGrn"] = o.ChannelGrn
	}
	if !IsNil(o.MarketGrn) {
		toSerialize["marketGrn"] = o.MarketGrn
	}
	return toSerialize, nil
}

type NullableChannelmanagerCreateAssociationRequest struct {
	value *ChannelmanagerCreateAssociationRequest
	isSet bool
}

func (v NullableChannelmanagerCreateAssociationRequest) Get() *ChannelmanagerCreateAssociationRequest {
	return v.value
}

func (v *NullableChannelmanagerCreateAssociationRequest) Set(val *ChannelmanagerCreateAssociationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelmanagerCreateAssociationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelmanagerCreateAssociationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelmanagerCreateAssociationRequest(val *ChannelmanagerCreateAssociationRequest) *NullableChannelmanagerCreateAssociationRequest {
	return &NullableChannelmanagerCreateAssociationRequest{value: val, isSet: true}
}

func (v NullableChannelmanagerCreateAssociationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelmanagerCreateAssociationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


