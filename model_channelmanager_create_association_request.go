/*
Channel Manager Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channelmanager

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChannelmanagerCreateAssociationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelmanagerCreateAssociationRequest{}

// ChannelmanagerCreateAssociationRequest struct for ChannelmanagerCreateAssociationRequest
type ChannelmanagerCreateAssociationRequest struct {
	TenantId string `json:"tenantId"`
	ChannelGrn string `json:"channelGrn"`
	MarketGrn string `json:"marketGrn"`
}

type _ChannelmanagerCreateAssociationRequest ChannelmanagerCreateAssociationRequest

// NewChannelmanagerCreateAssociationRequest instantiates a new ChannelmanagerCreateAssociationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelmanagerCreateAssociationRequest(tenantId string, channelGrn string, marketGrn string) *ChannelmanagerCreateAssociationRequest {
	this := ChannelmanagerCreateAssociationRequest{}
	this.TenantId = tenantId
	this.ChannelGrn = channelGrn
	this.MarketGrn = marketGrn
	return &this
}

// NewChannelmanagerCreateAssociationRequestWithDefaults instantiates a new ChannelmanagerCreateAssociationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelmanagerCreateAssociationRequestWithDefaults() *ChannelmanagerCreateAssociationRequest {
	this := ChannelmanagerCreateAssociationRequest{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *ChannelmanagerCreateAssociationRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *ChannelmanagerCreateAssociationRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *ChannelmanagerCreateAssociationRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetChannelGrn returns the ChannelGrn field value
func (o *ChannelmanagerCreateAssociationRequest) GetChannelGrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelGrn
}

// GetChannelGrnOk returns a tuple with the ChannelGrn field value
// and a boolean to check if the value has been set.
func (o *ChannelmanagerCreateAssociationRequest) GetChannelGrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelGrn, true
}

// SetChannelGrn sets field value
func (o *ChannelmanagerCreateAssociationRequest) SetChannelGrn(v string) {
	o.ChannelGrn = v
}

// GetMarketGrn returns the MarketGrn field value
func (o *ChannelmanagerCreateAssociationRequest) GetMarketGrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MarketGrn
}

// GetMarketGrnOk returns a tuple with the MarketGrn field value
// and a boolean to check if the value has been set.
func (o *ChannelmanagerCreateAssociationRequest) GetMarketGrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketGrn, true
}

// SetMarketGrn sets field value
func (o *ChannelmanagerCreateAssociationRequest) SetMarketGrn(v string) {
	o.MarketGrn = v
}

func (o ChannelmanagerCreateAssociationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelmanagerCreateAssociationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["channelGrn"] = o.ChannelGrn
	toSerialize["marketGrn"] = o.MarketGrn
	return toSerialize, nil
}

func (o *ChannelmanagerCreateAssociationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"channelGrn",
		"marketGrn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelmanagerCreateAssociationRequest := _ChannelmanagerCreateAssociationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelmanagerCreateAssociationRequest)

	if err != nil {
		return err
	}

	*o = ChannelmanagerCreateAssociationRequest(varChannelmanagerCreateAssociationRequest)

	return err
}

type NullableChannelmanagerCreateAssociationRequest struct {
	value *ChannelmanagerCreateAssociationRequest
	isSet bool
}

func (v NullableChannelmanagerCreateAssociationRequest) Get() *ChannelmanagerCreateAssociationRequest {
	return v.value
}

func (v *NullableChannelmanagerCreateAssociationRequest) Set(val *ChannelmanagerCreateAssociationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelmanagerCreateAssociationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelmanagerCreateAssociationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelmanagerCreateAssociationRequest(val *ChannelmanagerCreateAssociationRequest) *NullableChannelmanagerCreateAssociationRequest {
	return &NullableChannelmanagerCreateAssociationRequest{value: val, isSet: true}
}

func (v NullableChannelmanagerCreateAssociationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelmanagerCreateAssociationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


