/*
Channel Manager Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channelmanager

import (
	"encoding/json"
)

// checks if the ChannelmanagerListMarketsWithAssociationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelmanagerListMarketsWithAssociationsResponse{}

// ChannelmanagerListMarketsWithAssociationsResponse struct for ChannelmanagerListMarketsWithAssociationsResponse
type ChannelmanagerListMarketsWithAssociationsResponse struct {
	Markets []ChannelmanagerMarketResponseWithAssociations `json:"markets,omitempty"`
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

// NewChannelmanagerListMarketsWithAssociationsResponse instantiates a new ChannelmanagerListMarketsWithAssociationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelmanagerListMarketsWithAssociationsResponse() *ChannelmanagerListMarketsWithAssociationsResponse {
	this := ChannelmanagerListMarketsWithAssociationsResponse{}
	return &this
}

// NewChannelmanagerListMarketsWithAssociationsResponseWithDefaults instantiates a new ChannelmanagerListMarketsWithAssociationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelmanagerListMarketsWithAssociationsResponseWithDefaults() *ChannelmanagerListMarketsWithAssociationsResponse {
	this := ChannelmanagerListMarketsWithAssociationsResponse{}
	return &this
}

// GetMarkets returns the Markets field value if set, zero value otherwise.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) GetMarkets() []ChannelmanagerMarketResponseWithAssociations {
	if o == nil || IsNil(o.Markets) {
		var ret []ChannelmanagerMarketResponseWithAssociations
		return ret
	}
	return o.Markets
}

// GetMarketsOk returns a tuple with the Markets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) GetMarketsOk() ([]ChannelmanagerMarketResponseWithAssociations, bool) {
	if o == nil || IsNil(o.Markets) {
		return nil, false
	}
	return o.Markets, true
}

// HasMarkets returns a boolean if a field has been set.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) HasMarkets() bool {
	if o != nil && !IsNil(o.Markets) {
		return true
	}

	return false
}

// SetMarkets gets a reference to the given []ChannelmanagerMarketResponseWithAssociations and assigns it to the Markets field.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) SetMarkets(v []ChannelmanagerMarketResponseWithAssociations) {
	o.Markets = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ChannelmanagerListMarketsWithAssociationsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o ChannelmanagerListMarketsWithAssociationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelmanagerListMarketsWithAssociationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Markets) {
		toSerialize["markets"] = o.Markets
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return toSerialize, nil
}

type NullableChannelmanagerListMarketsWithAssociationsResponse struct {
	value *ChannelmanagerListMarketsWithAssociationsResponse
	isSet bool
}

func (v NullableChannelmanagerListMarketsWithAssociationsResponse) Get() *ChannelmanagerListMarketsWithAssociationsResponse {
	return v.value
}

func (v *NullableChannelmanagerListMarketsWithAssociationsResponse) Set(val *ChannelmanagerListMarketsWithAssociationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelmanagerListMarketsWithAssociationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelmanagerListMarketsWithAssociationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelmanagerListMarketsWithAssociationsResponse(val *ChannelmanagerListMarketsWithAssociationsResponse) *NullableChannelmanagerListMarketsWithAssociationsResponse {
	return &NullableChannelmanagerListMarketsWithAssociationsResponse{value: val, isSet: true}
}

func (v NullableChannelmanagerListMarketsWithAssociationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelmanagerListMarketsWithAssociationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


