/*
Channel Manager Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channelmanager

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChannelmanagerListMarketsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelmanagerListMarketsRequest{}

// ChannelmanagerListMarketsRequest struct for ChannelmanagerListMarketsRequest
type ChannelmanagerListMarketsRequest struct {
	TenantId string `json:"tenantId"`
	// The number of items to return per page. If not specified, it will returns all items.
	PageSize *int64 `json:"pageSize,omitempty"`
	PageToken *string `json:"pageToken,omitempty"`
}

type _ChannelmanagerListMarketsRequest ChannelmanagerListMarketsRequest

// NewChannelmanagerListMarketsRequest instantiates a new ChannelmanagerListMarketsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelmanagerListMarketsRequest(tenantId string) *ChannelmanagerListMarketsRequest {
	this := ChannelmanagerListMarketsRequest{}
	this.TenantId = tenantId
	return &this
}

// NewChannelmanagerListMarketsRequestWithDefaults instantiates a new ChannelmanagerListMarketsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelmanagerListMarketsRequestWithDefaults() *ChannelmanagerListMarketsRequest {
	this := ChannelmanagerListMarketsRequest{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *ChannelmanagerListMarketsRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *ChannelmanagerListMarketsRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *ChannelmanagerListMarketsRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ChannelmanagerListMarketsRequest) GetPageSize() int64 {
	if o == nil || IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerListMarketsRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ChannelmanagerListMarketsRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *ChannelmanagerListMarketsRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *ChannelmanagerListMarketsRequest) GetPageToken() string {
	if o == nil || IsNil(o.PageToken) {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerListMarketsRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PageToken) {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *ChannelmanagerListMarketsRequest) HasPageToken() bool {
	if o != nil && !IsNil(o.PageToken) {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *ChannelmanagerListMarketsRequest) SetPageToken(v string) {
	o.PageToken = &v
}

func (o ChannelmanagerListMarketsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelmanagerListMarketsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.PageToken) {
		toSerialize["pageToken"] = o.PageToken
	}
	return toSerialize, nil
}

func (o *ChannelmanagerListMarketsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChannelmanagerListMarketsRequest := _ChannelmanagerListMarketsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChannelmanagerListMarketsRequest)

	if err != nil {
		return err
	}

	*o = ChannelmanagerListMarketsRequest(varChannelmanagerListMarketsRequest)

	return err
}

type NullableChannelmanagerListMarketsRequest struct {
	value *ChannelmanagerListMarketsRequest
	isSet bool
}

func (v NullableChannelmanagerListMarketsRequest) Get() *ChannelmanagerListMarketsRequest {
	return v.value
}

func (v *NullableChannelmanagerListMarketsRequest) Set(val *ChannelmanagerListMarketsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelmanagerListMarketsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelmanagerListMarketsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelmanagerListMarketsRequest(val *ChannelmanagerListMarketsRequest) *NullableChannelmanagerListMarketsRequest {
	return &NullableChannelmanagerListMarketsRequest{value: val, isSet: true}
}

func (v NullableChannelmanagerListMarketsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelmanagerListMarketsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


