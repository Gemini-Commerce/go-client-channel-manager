/*
Channel Manager Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package channelmanager

import (
	"encoding/json"
)

// checks if the ChannelmanagerUpdateMarketRequestPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelmanagerUpdateMarketRequestPayload{}

// ChannelmanagerUpdateMarketRequestPayload struct for ChannelmanagerUpdateMarketRequestPayload
type ChannelmanagerUpdateMarketRequestPayload struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Countries []ChannelmanagerCountryCode `json:"countries,omitempty"`
}

// NewChannelmanagerUpdateMarketRequestPayload instantiates a new ChannelmanagerUpdateMarketRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelmanagerUpdateMarketRequestPayload() *ChannelmanagerUpdateMarketRequestPayload {
	this := ChannelmanagerUpdateMarketRequestPayload{}
	return &this
}

// NewChannelmanagerUpdateMarketRequestPayloadWithDefaults instantiates a new ChannelmanagerUpdateMarketRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelmanagerUpdateMarketRequestPayloadWithDefaults() *ChannelmanagerUpdateMarketRequestPayload {
	this := ChannelmanagerUpdateMarketRequestPayload{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChannelmanagerUpdateMarketRequestPayload) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerUpdateMarketRequestPayload) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChannelmanagerUpdateMarketRequestPayload) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChannelmanagerUpdateMarketRequestPayload) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelmanagerUpdateMarketRequestPayload) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerUpdateMarketRequestPayload) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelmanagerUpdateMarketRequestPayload) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChannelmanagerUpdateMarketRequestPayload) SetDescription(v string) {
	o.Description = &v
}

// GetCountries returns the Countries field value if set, zero value otherwise.
func (o *ChannelmanagerUpdateMarketRequestPayload) GetCountries() []ChannelmanagerCountryCode {
	if o == nil || IsNil(o.Countries) {
		var ret []ChannelmanagerCountryCode
		return ret
	}
	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelmanagerUpdateMarketRequestPayload) GetCountriesOk() ([]ChannelmanagerCountryCode, bool) {
	if o == nil || IsNil(o.Countries) {
		return nil, false
	}
	return o.Countries, true
}

// HasCountries returns a boolean if a field has been set.
func (o *ChannelmanagerUpdateMarketRequestPayload) HasCountries() bool {
	if o != nil && !IsNil(o.Countries) {
		return true
	}

	return false
}

// SetCountries gets a reference to the given []ChannelmanagerCountryCode and assigns it to the Countries field.
func (o *ChannelmanagerUpdateMarketRequestPayload) SetCountries(v []ChannelmanagerCountryCode) {
	o.Countries = v
}

func (o ChannelmanagerUpdateMarketRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelmanagerUpdateMarketRequestPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Countries) {
		toSerialize["countries"] = o.Countries
	}
	return toSerialize, nil
}

type NullableChannelmanagerUpdateMarketRequestPayload struct {
	value *ChannelmanagerUpdateMarketRequestPayload
	isSet bool
}

func (v NullableChannelmanagerUpdateMarketRequestPayload) Get() *ChannelmanagerUpdateMarketRequestPayload {
	return v.value
}

func (v *NullableChannelmanagerUpdateMarketRequestPayload) Set(val *ChannelmanagerUpdateMarketRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelmanagerUpdateMarketRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelmanagerUpdateMarketRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelmanagerUpdateMarketRequestPayload(val *ChannelmanagerUpdateMarketRequestPayload) *NullableChannelmanagerUpdateMarketRequestPayload {
	return &NullableChannelmanagerUpdateMarketRequestPayload{value: val, isSet: true}
}

func (v NullableChannelmanagerUpdateMarketRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelmanagerUpdateMarketRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


